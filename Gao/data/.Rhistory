Ships[1]
#Q20
Ships$Captains
#Q21
GaoShip <- list("Gao", 6L)
Ships <- rbind(Ships, GaoShip)
Ships
#Q22
for (i in SailorCount) {
print(1L)
}
for (i in CrewCount) {
print(1L)
}
for (i in length(CrewCount)) {
print(1L)
}
for (i in CrewCount) {
print(CrewCount[i])
}
CrewCount
CrewCount
for (i in CrewCount) {
CrewCount[i]
}
CrewCount
for (i in CrewCount) {
print(CrewCount[i])
}
CrewCount
for (i in CrewCount) {
print(i)
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
print(1)
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
print(i + "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i + "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i + "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i + "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
print(i)
paste(i, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste("is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
print("is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
print(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
crew
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
crew
paste(crew, "is a large crew")
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
crew
paste(crew, "is a large crew")
}
}
#Q22,23,24
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
crew
}
}
CrewCount
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
print(paste(i, "is a  large crew"))
}
}
#Q1
#Q2
Vector <- c(1L,2L,3L,4L,5L)
#Q3
twos <-c(seq(2,10,2))
#Q4
threes <- c(seq(3,15,3))
fours <- c(seq(4, 20, 4))
fives <- c(seq(5, 25, 5))
#Q6
TimesTable <- data.frame("one" = Vector, "two" = twos, "three" = threes, "four" = fours, "five" = fives)
#Q7
TimesTable
#Q8
sixes <- c(seq(6,36,6))
#Q9
TimesTable <-  rbind(TimesTable, "six" = sixes)
TimesTable
#Q10
TimesTable <- cbind(TimesTable, sixes)
TimesTable
#Q11
TimesTable[[6]][[5]]
TimesTable[[6,5]]
#Q12,13
DivideAndRound <- function(x,y)
{
result <- x/y
result <- round(result, 2)
print(result)
}
#Q14
DivideAndRound(8,3)
DivideAndRound(0,0)
#Q15
CaptainNames <- c("Lucas","Lee","MenSing")
#Q16
CrewCount <- c(7L, 3L, 4L)
#Q17
Ships <- data.frame("Captains" = CaptainNames, "SailorCount" = CrewCount)
#Q18
Ships
#Q19
Ships[1]
#Q20
Ships$Captains
#Q21
GaoShip <- list("Gao", 6L)
Ships <- rbind(Ships, GaoShip)
Ships
#Q22,23,24,25,26
for (i in CrewCount) {
if(i >= 5)
{
crew <- i
print(paste(i, "is a large crew"))
}
else if (i <= 3)
{
crew <- i
print(paste(i, "is a medium crew"))
}
else
{
crew <- i
print(paste(i, "is a small crew"))
}
}
library(tidyverse)
library(tidyverse)
getwd()
setwd("Desktop/")
getwd()
setwd("Desktop//Adv Data Science")
setwd("//Adv Data Science")
setwd("/Adv Data Science")
getwd()
setwd('..')
getwd()
setwd("Documents/murach_r/data")
download.file(url, dest_file)
url <- "https://fivethirtyeight.com/general-model/president_general_polls_2016.csv"
dest_file <- "polls.csv"
download.file(url, dest_file)
url <- "https://projects.fivethirtyeight.com/general-model/president_general_polls_2016.csv"
url <- "https://projects.fivethirtyeight.com/general-model/president_general_polls_2016.csv"
dest_file <- "polls.csv"
download.file(url, dest_file)
setwd('..')
setwd("Documents/murach_r/data")
getwd()
setwd('..')
setwd('..')
getwd()
setwd("Documents/murach_r/data")
library(tidyverse)
library(datasets)
polls <- read.csv(dest_file)
url <- "https://projects.fivethirtyeight.com/general-model/president_general_polls_2016.csv"
dest_file <- "polls.csv"
download.file(url, dest_file)
polls <- read.csv(dest_file)
polls
polls$population
polls$samplesize
polls %>%  group_by(pollsters) %>% summarise()
polls %>%  group_by(pollster) %>% summarise()
polls %>%  group_by(pollster) %>% summarise()
polls %>% group_by(pollster) %>% summarize(count = n())
print(n=196)
print (n=196,polls %>% group_by(pollster) %>% summarize(count = n()))
polls %>% group_by(grade) %>% summarize(count = n())
str(polls, strip.width = "cut")
unique(polls$grade)
unique(polls$type)
summarize(unique(polls$type))
length(unique(polls$type))
polls %>% apply(MARGIN = 2, FUN = unique) %>% str(string.width = "cut")
polls %>% apply(MARGIN = 2, FUN = unique) %>% apply(FUN = length) %>% str(string.width = "cut")
polls %>% apply(MARGIN = 2, FUN = unique) %>% lapply(FUN = length) %>% str(string.width = "cut")
polls$state %>% table()
(table(polls$state) / sum(table(polls$state) *100) %>% round(3)
(table(polls$state) / sum(table(polls$state) *100) %>% round(3)
(table(polls$state) / sum(table(polls$state)) *100) %>% round(3)
(table(polls$state) / sum(table(polls$state)) * 100) %>% round(3)
(table(polls$state) / sum(table(polls$state)) * 100) %>% round(3)
table(polls[c("state","grade")])
table(polls[c("state","grade")])
(table(polls$state) / sum(table(polls$state)) * 100) %>% round(3)
library(tidyverse)
library(datasets)
swchars <- as_tibble(starwars)
swchars
?starwars
swchars %>% str(strict.width = "cut", max.level = 2)
swchars %>% filter(duplicated*(swchars))
swchars %>% filter(duplicated(swchars))
swchars <- swchars %>% select(-birth_year, -homeworld, -films, -vehicles, -starships)
swchars
swchars <- swchars %>% rename(HairColor = Hair_color, SkinColor = Skin_color, EyeColor = eye_color)
swchars <- swchars %>% rename(HairColor = hair_color, SkinColor = skin_color, EyeColor = eye_color)
swchars
swchars %>% filter(!complete.cases(swchars))
print(swchars, n = 34)
swchars2 <- swchars %>% filter(!complete.cases(swchars))
swchars2
swchars2 %>% print(n = 34)
swchars %>% apply(MARGIN = 2m function(col sum(is.na(col))))
swchars %>% apply(MARGIN = 2, function(col) sum(is.na(col)))
swchars %>% filter(is.na(Height))
swchars <- swachrs %>% filter(Name != "Captain Phasma")
swchars %>% print(n=34)
swchars <- swachrs %>% filter(Name != "Captain Phasma")
swchars %>% print(n=34)
swchars %>% print(n=87)
swchars <- swchars %>% filter(Name != "Captain Phasma")
swchars <- swchars %>% filter(name != "Captain Phasma")
swchars <- swchars %>% filter(name != "Captain Phasma")
swchars %>% print(n=87)
swchars <- swchars %>% select(-Mass)
swchars <- swchars %>% select(-mass)
swchars <- swchars %>% select(-HairColor)
swchars
swchars %>% filter(!complete.cases(mass))
swchars <- swchars %>% filter(name != "Captain Phasma")
swchars %>% print(n=87)
swchars %>% filter(!complete.cases(mass))
swchars %>% filter(!complete.cases(HairColor))
swchars <- as_tibble(starwars)
swchars
?starwars
swchars %>% str(strict.width = "cut", max.level = 2)
swchars %>% filter(duplicated(swchars))
swchars <- swchars %>% select(-birth_year, -homeworld, -films, -vehicles, -starships)
swchars <- swchars %>% rename_with(str_to_title)
swchars <- swchars %>% rename(HairColor = hair_color, SkinColor = skin_color, EyeColor = eye_color)
library(tidyverse)
library(datasets)
swchars <- as_tibble(starwars)
swchars
?starwars
swchars %>% str(strict.width = "cut", max.level = 2)
swchars %>% filter(duplicated(swchars))
swchars <- swchars %>% select(-birth_year, -homeworld, -films, -vehicles, -starships)
swchars <- swchars %>% rename_with(str_to_title)
swchars <- swchars %>% rename(HairColor = hair_color, SkinColor = skin_color, EyeColor = eye_color)
swchars %>% print(n=88)
swchars <- swchars %>% rename(HairColor = hair_color, SkinColor = skin_color, EyeColor = eye_color)
swchars <- swchars %>% rename(HairColor = Hair_color, SkinColor = Skin_color, EyeColor = Eye_color)
swchars <- as_tibble(starwars)
swchars
?starwars
swchars %>% str(strict.width = "cut", max.level = 2)
swchars %>% filter(duplicated(swchars))
swchars <- swchars %>% select(-birth_year, -homeworld, -films, -vehicles, -starships)
swchars <- swchars %>% rename_with(str_to_title)
swchars <- swchars %>% rename(HairColor = Hair_color, SkinColor = Skin_color, EyeColor = Eye_color)
swchars
swchars %>% filter(!complete.cases(swchars))
swchars %>% print(n = 34)
swchars2 <- swchars %>% filter(!complete.cases(swchars))
swchars2
swchars2 %>% print(n = 34)
swchars %>% apply(MARGIN = 2, function(col) sum(is.na(col)))
swchars %>% filter(is.na(Height))
swchars <- swchars %>% filter(name != "Captain Phasma")
swchars <- swchars %>% filter(Name != "Captain Phasma")
library(tidyverse)
library(datasets)
swchars <- as_tibble(starwars)
swchars
?starwars
swchars %>% str(strict.width = "cut", max.level = 2)
swchars %>% filter(duplicated(swchars))
swchars <- swchars %>% select(-birth_year, -homeworld, -films, -vehicles, -starships)
swchars <- swchars %>% rename_with(str_to_title)
swchars <- swchars %>% rename(HairColor = Hair_color, SkinColor = Skin_color, EyeColor = Eye_color)
swchars
swchars %>% filter(!complete.cases(swchars))
swchars %>% print(n = 34)
swchars2 <- swchars %>% filter(!complete.cases(swchars))
swchars2
swchars2 %>% print(n = 34)
swchars %>% apply(MARGIN = 2, function(col) sum(is.na(col)))
swchars %>% filter(is.na(Height))
swchars <- swchars %>% filter(Name != "Captain Phasma")
swchars %>% print(n=87)
swchars %>% filter(!complete.cases(Mass))
swchars <- swchars %>% select(-Mass)
swchars %>% print(n=88)
swchars %>% filter(!complete.cases(HairColor))
swchars <- swchars %>% mutate(HairColor = replace_na(HairColor, "none"))
swchars %>% print(n=88)
unique(swchars$Species)
library(tidyverse)
library(datasets)
swchars <- as_tibble(starwars)
swchars
?starwars
swchars %>% str(strict.width = "cut", max.level = 2)
swchars %>% filter(duplicated(swchars))
swchars <- swchars %>% select(-birth_year, -homeworld, -films, -vehicles, -starships)
swchars <- swchars %>% rename_with(str_to_title)
swchars <- swchars %>% rename(HairColor = Hair_color, SkinColor = Skin_color, EyeColor = Eye_color)
swchars
swchars %>% filter(!complete.cases(swchars))
swchars %>% print(n = 34)
swchars2 <- swchars %>% filter(!complete.cases(swchars))
swchars2
swchars2 %>% print(n = 34)
swchars %>% apply(MARGIN = 2, function(col) sum(is.na(col)))
swchars %>% filter(is.na(Height))
swchars <- swchars %>% filter(Name != "Captain Phasma")
swchars %>% print(n=87)
swchars %>% filter(!complete.cases(Mass))
swchars <- swchars %>% select(-Mass)
swchars %>% filter(!complete.cases(HairColor))
swchars <- swchars %>% mutate(HairColor = replace_na(HairColor, "none"))
swchars %>% filter(!complete.cases(Sex))
swchars <- swchars %>% filter(complete.cases(Sex))
swchars %>% filter(!complete.cases(swchars))
unique(swchars$Species)
