F_WeakNeg = -X + sample(-125:125, 1, replace =TRUE),
G_ModerateNeg = -X + sample(-50:50, 1, replace = TRUE),
H_StrongNeg = -X + sample(-25:25, 1, replace = TRUE),
I_PerfectNeg = -X)
ggplot(data = r_vals_long) +
geom_point(aes(x = X, y = Value)) +
facet_wra(facets = vars(Variable), scales = "free")
r_vals_long <- r_vals %>%
pivot_longer(cols = names(select(r_vals, -1)),
names_to = "Variable",
values_to = "Value")
ggplot(data = r_vals_long) +
geom_point(aes(x = X, y = Value)) +
facet_wra(facets = vars(Variable), scales = "free")
ggplot(data = r_vals_long) +
geom_point(aes(x = X, y = Value)) +
facet_wrap(facets = vars(Variable), scales = "free")
cor(x = diamonds$Price, y = diamonds$Carat)
cor(r_vals, r_vals$X)
cor(x = diamonds$Price, y = diamonds$Carat)
cor(diamonds$Price, select_if(diamonds, is.numeric))
select_if(diamonds, is.numeric) %>% cor() %>% round(3)
ggplot(diamonds, aes(x = carat, y = price)) + geom_point()
ggplot(diamonds, aes(x = Carat, y = Price)) + geom_point()
ggplot(diamonds, aes(x = Z, y = Price)) + geom_point() + xlim(2.25, 6)
gpplot(diamonds, aes(x = Z, y = Price)) + geom_point
ggplot(diamonds, aes(x = Z, y = Price)) + geom_point
ggplot(diamonds, aes(x = Z, y = Price)) + geom_point()
ggplot(diamonds, aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds, aes(x = Depth, y = Price)) + geom_point(alpha = .1)
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(500), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(50000), aes(x = Depth, y = Price)) + geom_point()
ggplot(diamonds %>% sample_n(5000), aes(x = Depth, y = Price)) + geom_point(alpha = .1)
diamonds_split <- initial_split(diamonds, prop = 0.75)
install.packages("tidymodels")
library(tidymodels)
diamonds_split <- initial_split(diamonds, prop = 0.75)
train <- training(diamonds_split)
test <- testing(diamonds_split)
select_if(diamonds, is.numeric) %>% cor() %>% round(3)
train
test
get_upper_fence <- function(x){
quantile(x, 0.75) + (1.5 * IQR(x))
}
get_lower_fence <- function(x) {
quantile(x, 0.25) - (1.5 * IQR(x))
}
train <- train %>% filter_at(vars(Carat, Depth, Table, X, Y, Z),
all_vars(. > get_lower_fence(.) &
. < get_upper_fence(.)))
train
ggplot(data = train, aes(x = Z, y = Price)) + geom_point()
train <- train %>% filter(!Z < 2.25)
ggplot(data = train, aes(x = Z, y = Price)) + geom_point()
knitr::opts_chunk$set(echo = TRUE)
model <- lm(Length ~ Age, data = lobsters)
model
summary(model)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
Import libraries
```{r}
library(tidyverse)
library(tidyverse)
library(tidymodels)
Import Lobsters data
lobsters <- read_csv("Lobsters.csv") %>% as_tibble()
lobsters <- read_csv("Lobsters.csv") %>% as_tibble()
Create a plot
```{r}
ggplot(data = lobsters) + geom_point(aes(x = Age, y = Length))
ggplot(data = lobsters) + geom_point(aes(x = Age, y = Length))
Create a linear regression model
```{r}
model <- lm(Length ~ Age, data = lobsters)
model
summary(model)
summary(model)
```{r}
lobsters$sqrtLength <- lobsters$Length^0.5
model2 <- lm(sqrtLength ~ Age, data = lobsters)
model2
summary(model2)
summary(model2)
```{r}
lobsters$Length2 <- lobsters$Length^2
model3 <- lm(Length2 ~ Age, data = lobsters)
model3
summary(model3)
summary(model3)
```{r}
ggplot(lobsters) + geom_point(aes(x=predict(model), y=resid(model)))
ggplot(lobsters) + geom_point(aes(x=predict(model), y=resid(model)))
```{r}
ggplot(lobsters) + geom_point(aes(x=predict(model2), y=resid(model2)))
ggplot(lobsters) + geom_point(aes(x=predict(model2), y=resid(model2)))
```{r}
ggplot(lobsters) + geom_point(aes(x=predict(model3), y=resid(model3)))
getwd
getwd()
setwd("Documents/GitHub/Advanced-Data-Science/Gao")
getwd()
knitr::opts_chunk$set(echo = TRUE)
setwd("Documents/GitHub/Advanced-Data-Science/Gao")
NBA <- read_csv("NBA22.csv") %>% as_tibble()
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
NBA <- read_csv("NBA22.csv") %>% as_tibble()
setwd("Documents/GitHub/Advanced-Data-Science/Gao/Unit 3")
setwd("Unit 3")
setwd("Documents/GitHub/Advanced-Data-Science/Gao/Unit 3")
NBA <- read_csv("NBA22.csv") %>% as_tibble()
cor(NBA$PTS, NBA$AGE)
select_if(NBA, is.numeric) %>% cor() %>% round(3)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
getwd()
NBA <- read_csv("NBA22.csv") %>% as_tibble()
ggplot(df, aes(x = AGE, y = PTS)) +
geom_point() +
facet_wrap(~TEAM, ncol = 2) +
labs(title = "Age vs. Points by Team")
ggplot(NBA, aes(x = AGE, y = PTS)) +
geom_point() +
facet_wrap(~TEAM, ncol = 2) +
labs(title = "Age vs. Points by Team")
ggplot(NBA, aes(x = TEAM, y = HEIGHT)) +
geom_boxplot() +
facet_wrap(~COLLEGE, ncol = 2) +
labs(title = "Height Distribution by College")
ggplot(NBA, aes(x = TEAM, y = HEIGHT)) +
geom_boxplot() +
facet_wrap(~COLLEGE, ncol = 10) +
labs(title = "Height Distribution by College")
ggplot(NBA, aes(x = TEAM, y = HEIGHT)) +
geom_boxplot() +
facet_wrap(~COLLEGE, ncol = 100) +
labs(title = "Height Distribution by College")
ggplot(NBA, aes(x = TEAM, y = HEIGHT)) +
geom_boxplot() +
labs(title = "Height Distribution by College")
ggplot(NBA, aes(x = TEAM, y = TOTAL HEIGHT)) +
ggplot(NBA, aes(x = TEAM, y = "TOTAL HEIGHT")) +
geom_boxplot() +
labs(title = "Height Distribution by College")
ggplot(NBA, aes(x = "DRAFT YEAR", y = "PTS")) +
geom_boxplot() +
labs(title = "Height Distribution by College")
ggplot(NBA, aes(x = "DRAFT YEAR", y = "PTS")) +
geom_boxplot()
View(NBA)
ggplot(NBA, aes(x = "WEIGHT", y = "HEIGHT")) +
geom_boxplot()
ggplot(NBA, aes(x = "WEIGHT", y = "HEIGHT")) +
geom_point()
ggplot(NBA, aes(x = HEIGHT, y = PTS)) +
geom_point()
ggplot(NBA, aes(x = TOTAL HEIGHT, y = PTS)) +
ggplot(NBA, aes(x = "TOTAL HEIGHT", y = PTS)) +
geom_point()
NBA <- read_csv("NBA22.csv") %>% as_tibble()
ggplot(NBA, aes(x = TOTAL_HEIGHT, y = PTS)) +
geom_point()
ggplot(NBA, aes(x = TOTAL_HEIGHT, y = WEIGHT)) +
geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
getwd()
NBA <- read_csv("NBA22.csv") %>% as_tibble()
plot(fitted(model),resid(model))
model <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF, data = NBA)
model
plot(fitted(model),resid(model))
qqplot(resid(model))
library("callr")
library("car")
install.packages("car")
install.packages("car")
library("car")
getwd()
knitr::opts_chunk$set(echo = TRUE)
standard_error <- sqrt(deviance(model)/df.residual(model))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
library(car)
NBA <- read_csv("NBA22.csv") %>% as_tibble()
cor(NBA$PTS, NBA$AGE)
knitr::opts_chunk$set(echo = TRUE)
cor(NBA$PTS, select_if(NBA, is.numeric))
model <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF, data = NBA)
model
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
qqnorm(resid(model))
1*standard_error
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
2*standard_error
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
residual <- resid(model)
residual
sort(residuals)
sort(residual)
View(NBA)
h <- 2*(5+1)/539
h
sort(hatvalues(model))
t <- qt(df = 539 - 5 - 2, 0.95)
t <- qt(df = 539 - 5 - 2, 0.95)
t
sirt(jackknife <- rstudent(model))
sort(jackknife <- rstudent(model))
sort(cooks.distance(model))
skewness(jackknife)
library(car)
car
library(moments)
install.packages("moments")
library(moments)
skewness(jackknife)
kurtosis(jacknife)
kurtosis(jackknife)
getwd()
knitr::opts_chunk$set(echo = TRUE)
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
library(tidyverse)
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
Import the data
```{r}
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
View(rollercoasters)
cor(rollercoasters$Speed, select_if(rollercoasters, is.numeric))
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
Import libraries or something
```{r}
library(tidyverse)
Import the data
library(tidyverse)
```{r}
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
```{r}
```{r}
cor(rollercoasters$Speed, select_if(rollercoasters, is.numeric))
cor(rollercoasters$Speed, select_if(rollercoasters, is.numeric))
Find the regression model
```{r}
model <- lm(Speed ~ Height + Drop + Length + Duration + Inversions, data = rollercoasters)
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
cor(rollercoasters$Speed, select_if(rollercoasters, is.numeric))
model <- lm(Speed ~ Height + Drop + Length + Duration + Inversions, data = rollercoasters)
model
plot(fitted(model), resid(modeo))
plot(fitted(model), resid(model))
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
2*standard_error
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
Import libraries or something
```{r}
library(tidyverse)
library(ggplot2)
library(tidyverse)
library(ggplot2)
Import the data
```{r}
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
```{r}
```{r}
cor(rollercoasters$Speed, select_if(rollercoasters, is.numeric))
cor(rollercoasters$Speed, select_if(rollercoasters, is.numeric))
Find the regression model
```{r}
model <- lm(Speed ~ Height + Drop + Length + Duration + Inversions, data = rollercoasters)
model
model <- lm(Speed ~ Height + Drop + Length + Duration + Inversions, data = rollercoasters)
model
Construct the residual plot
```{r}
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
library(car)
library(moments)
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
knitr::opts_chunk$set(echo = TRUE)
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
sort(hatvalues(model))
skewness(jackknife)
sort(jackknife <- rstudent(model))
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
2*standard_error
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
summary(model)
residuals <- resid(model)
sort(residuals)
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
2*standard_error
sort(jackknife <- rstudent(model))
qqnorm(resid(model))
install.packages("psych")
install.packages("GGally")
library(ggally)
library(psych)
model <- lm(Speed ~ Height + Drop + Length + Duration + Inversions, data = rollercoasters)
model
View(model)
View(rollercoasters)
levarage <- 2(1+5)/101
lev <- 2 * (1+5)/101
lev
sort(hatvalues(model))
lev
sort(hatvalues(model))
jac <- qt(101 - 5 - 2, 0.95)
jac
jac <- qt(101 - 5 - 2, 0.95)
jac <- qt(df= 101 - 5 - 2, 0.95)
jac
sort(jackknife <- rstudent(model))
install.packages("fastDummies")
library(fastDummies)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
library(car)
library(moments)
library(ggally)
library(psych)
library(fastDummies)
library(ggally)
install.packages("GGally")
library(ggally)
library(psych)
library(moments)
library(ggally)
library(psych)
library(ggally)
install.packages("GGally")
library(ggally)
library(ggally)
library(psych)
library(GGally)
NBA <- read_csv("NBA22.csv") %>% as_tibble()
NBA <- dummy_cols(NBA, select_columns = "DRAFT_ROUND", remove_first_dummy = TRUE)
NBA <- dummy_cols(NBA, select_columns = "DRAFT_ROUND", remove_first_dummy = TRUE)
NBA <- read_csv("NBA22.csv") %>% as_tibble()
NBA <- read_csv("NBA22.csv") %>% as_tibble()
```{r}
cor(NBA$PTS, NBA$AGE)
cor(NBA$PTS, NBA$AGE)
```{r}
cor(NBA$PTS, select_if(NBA, is.numeric))
cor(NBA$PTS, select_if(NBA, is.numeric))
```{r}
model <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF, data = NBA)
model
model <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF, data = NBA)
model
```{r}
plot(fitted(model),resid(model))
```{r}
qqnorm(resid(model))
```{r}
standard_error
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
knitr::opts_chunk$set(echo = TRUE)
NBA <- dummy_cols(NBA, select_columns = "DRAFT_ROUND", remove_first_dummy = TRUE)
NBA
library(tidyverse)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(tidymodels)
library(ggforce)
library(yardstick)
library(moments)
library(GGally)
library(psych)
library(fastDummies)
NBA <- read_csv("NBA22.csv") %>% as_tibble()
NBA <- dummy_cols(NBA, select_columns = "DRAFT_ROUND", remove_first_dummy = TRUE)
NBA
model 2 <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF + DRAFT_ROUND_2 + DRAFT_ROUND_Undrafted, data = NBA)
model2 <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF + DRAFT_ROUND_2 + DRAFT_ROUND_Undrafted, data = NBA)
model
cor(NBA$PTS, NBA$AGE)
cor(NBA$PTS, select_if(NBA, is.numeric))
model <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF, data = NBA)
model
plot(fitted(model),resid(model))
qqnorm(resid(model))
standard_error <- sqrt(deviance(model)/df.residual(model))
standard_error
2*standard_error
plot(fitted(model),resid(model))
abline(h=2*standard_error, col = "red")
abline(h=-2*standard_error, col = "red")
residual <- resid(model)
residual
sort(residual)
(
(
h
sort(hatvalues(model))
model2 <- lm(PTS ~ HEIGHT + MIN + FGM + FTM + PF + DRAFT_ROUND_2 + DRAFT_ROUND_Undrafted, data = NBA)
model2
summary(model2)
model2 %>% tidy()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
library(car)
library(moments)
library(ggally)
library(psych)
library(fastDummies)
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
library(car)
library(moments)
library(ggally)
rollercoasters <- read_csv("rollercoasters.csv") %>% as_tibble()
View(rollercoasters)
rollercoasters <- dummy_cols(rollercoasters, select_columns = Track, remove_first_dummy = TRUE)
rollercoasters <- dummy_cols(rollercoasters, select_columns = "Track", remove_first_dummy = TRUE)
rollercoasters
model2 <- lm(Speed ~ Height + Drop + Length + Duration + Inversions + Track_Wood, data = rollercoasters)
summary(model2)
model2 %>% tidy()
library(GGally)
model2 <- lm(Speed ~ Height + Drop + Length + Duration + Inversions + Track_Wood, data = rollercoasters)
summary(model2)
plot(fitted(model), resid(model))
getwd()
knitr::opts_chunk$set(echo = TRUE)
Houses <- read_csv("houses.csv") %>% as_tibble()
library(tidyverse)
library(tidymodels)
library(ggforce)
library(yardstick)
library(car)
library(moments)
library(GGally)
library(psych)
library(fastDummies)
Houses <- read_csv("houses.csv") %>% as_tibble()
View(Houses)
View(Houses)
knitr::opts_chunk$set(echo = TRUE)
Travel <- read_csv("timetravel.csv") %>% as_tibble()
Travel <- read_csv("Travel_Times.csv") %>% as_tibble()
summary(Travel)
